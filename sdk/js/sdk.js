// Generated by CoffeeScript 1.6.1
var SDK;

SDK = (function() {

  function SDK() {
    var id;
    $(window).on('hashchange', function() {
      return window.location.reload();
    });
    id = window.location.hash.replace(new RegExp('#', 'g'), '');
    if (id.length < 1) {
      window.location.hash = 'qiuShiGou';
    } else {
      this.loadPlugin(id);
    }
  }

  SDK.prototype.onPluginLoad = function(e) {
    var doc;
    console.log(e);
    doc = $('object').contents();
    return $(doc).ready(function() {
      var body;
      console.log($('object').contents());
      body = $('object').contents().find('body');
      console.log(body);
      body.css({
        overflow: 'hidden',
        height: '100%'
      });
      return html.perfectScrollbar();
    });
  };

  SDK.prototype.loadPlugin = function(pluginID) {
    var object, src,
      _this = this;
    src = "../plugins/" + pluginID + "/index.html";
    object = $('<object></object>')[0].cloneNode(true);
    object.height = 450;
    object.width = 300;
    object.data = src;
    object.onload = function(e) {
      return _this.onPluginLoad(e);
    };
    return $('#wrap').html(object);
  };

  SDK.prototype.onMessage = function(url) {
    var args, fn, id, part1, part2, prefix, _ref, _ref1;
    prefix = 'data:text/qscmobile-msg;base64,';
    if (url.indexOf(prefix) > -1) {
      url = url.replace('data:text\/qscmobile-msg;base64', '');
      this.onMessage(url);
    }
    _ref = JSON.parse(msg), id = _ref.id, fn = _ref.fn, args = _ref.args;
    _ref1 = fn.split('.'), part1 = _ref1[0], part2 = _ref1[1];
    fn = this[part1][part2];
    return fn.call(this, {
      id: id,
      args: args
    });
  };

  SDK.prototype.sendMessage = function(msg) {};

  SDK.prototype.user = {
    stuid: function() {
      return "3000000000";
    },
    pwd: function() {
      return "123456";
    }
  };

  SDK.prototype.kvdb = {
    get: function(args) {
      var id, key, msg, _ref;
      _ref = args, id = _ref.id, args = _ref.args;
      key = args.key;
      msg = {
        id: id
      };
      try {
        msg.data = localStorage.getItem(key);
      } catch (e) {
        msg.error = e;
      }
      return this.sendMessage(msg);
    },
    set: function(args) {
      var id, key, msg, value, _ref;
      _ref = args, id = _ref.id, args = _ref.args;
      key = args.key, value = args.value;
      msg = {
        id: id
      };
      try {
        msg.data = localStorage.setItem(key, value);
      } catch (e) {
        msg.error = e;
      }
      return this.sendMessage(msg);
    },
    remove: function(args) {
      var id, key, msg, _ref;
      _ref = args, id = _ref.id, args = _ref.args;
      key = args.key;
      msg = {
        id: id
      };
      try {
        msg.data = localStorage.removeItem(key);
      } catch (e) {
        msg.error = e;
      }
      return this.sendMessage(msg);
    },
    clear: function(args) {
      var id, msg;
      id = args.id;
      msg = {
        id: id
      };
      try {
        msg.data = localStorage.clear();
      } catch (e) {
        msg.error = e;
      }
      return this.sendMessage(msg);
    }
  };

  return SDK;

})();

$(function() {
  return $(document).ready(function() {
    window.sdk = new SDK;
    return console.log(sdk);
  });
});
